{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"section\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col s12\"\n};\nconst _hoisted_5 = {\n  class: \"card\"\n};\nconst _hoisted_6 = {\n  class: \"card-content\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"card-title\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"tiny material-icons\"\n}, \"info_outline\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Click the panels below to see how the score was evaluated.\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"collapsible\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  class: \"material-icons\"\n};\nconst _hoisted_13 = {\n  class: \"material-symbols-outlined\"\n};\nconst _hoisted_14 = [\"data-badge-caption\"];\nconst _hoisted_15 = {\n  class: \"collapsible-body\"\n};\nconst _hoisted_16 = {\n  class: \"striped responsive-table\"\n};\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Quality Measure\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Score: 1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Score: 0.5\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Score: 0\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_header_component = _resolveComponent(\"header-component\");\n  const _component_MainComponent = _resolveComponent(\"MainComponent\");\n  const _component_footer_component = _resolveComponent(\"footer-component\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_header_component), _createVNode(_component_MainComponent, {\n    onCitySelected: $options.loadCity\n  }, null, 8 /* PROPS */, [\"onCitySelected\"]), _createCommentVNode(\" Content \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [$data.city ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString($data.city.name) + \" Index Score: \" + _toDisplayString($data.city.score) + \"/9 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_8, _hoisted_9, _createElementVNode(\"ul\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.city.measures, measure => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: measure.id\n    }, [_createElementVNode(\"div\", {\n      class: \"collapsible-header\",\n      onClick: $event => $options.showMeasureDetails(measure.id)\n    }, [_createElementVNode(\"i\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, _toDisplayString(measure.icon), 1 /* TEXT */)]), _createTextVNode(\" \" + _toDisplayString(measure.name) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: \"new badge red\",\n      \"data-badge-caption\": measure.score\n    }, null, 8 /* PROPS */, _hoisted_14)], 8 /* PROPS */, _hoisted_11), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"table\", _hoisted_16, [_hoisted_17, _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(measure.description[2]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(measure.descriptions[0]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(measure.descriptions[1]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(measure.descriptions[2]), 1 /* TEXT */)])])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])])])]), _createVNode(_component_footer_component)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","_component_header_component","_component_MainComponent","onCitySelected","$options","loadCity","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","$data","city","_createElementBlock","_hoisted_7","_toDisplayString","name","score","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","measures","measure","key","id","onClick","$event","showMeasureDetails","_hoisted_12","_hoisted_13","icon","_hoisted_15","_hoisted_16","_hoisted_17","description","descriptions","_component_footer_component"],"sources":["/Users/caminibu/Documents/AEMP/tbor/src/components/CityPage.vue"],"sourcesContent":["<template>\n  <div>\n    <header-component></header-component>\n    <MainComponent @city-selected=\"loadCity\" />\n    <!-- Content -->\n    <div class=\"container\">\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"card\">\n              <div class=\"card-content\">\n                <span class=\"card-title\" v-if=\"city\">{{ city.name }} Index Score: {{ city.score }}/9 </span>\n                <i class=\"tiny material-icons\">info_outline</i>\n                <span>Click the panels below to see how the score was evaluated.</span>\n                <ul class=\"collapsible\">\n                  <li v-for=\"measure in city.measures\" :key=\"measure.id\">\n                    <div class=\"collapsible-header\" @click=\"showMeasureDetails(measure.id)\">\n                      <i class=\"material-icons\">\n                        <span class=\"material-symbols-outlined\">{{ measure.icon }}</span>\n                      </i>\n                      {{ measure.name }}\n                      <span class=\"new badge red\" :data-badge-caption=\"measure.score\"></span>\n                    </div>\n                    <div class=\"collapsible-body\">\n                      <table class=\"striped responsive-table\">\n                        <thead>\n                          <tr>\n                            <th>Quality Measure</th>\n                            <th>Score: 1</th>\n                            <th>Score: 0.5</th>\n                            <th>Score: 0</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>{{ measure.description[2] }}</td>\n                            <td>{{ measure.descriptions[0] }}</td>\n                            <td>{{ measure.descriptions[1] }}</td>\n                            <td>{{ measure.descriptions[2] }}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <footer-component></footer-component>\n</template>\n\n<script>\n// CityPage.vue\nimport HeaderComponent from './HeaderComponent.vue';\nimport FooterComponent from './FooterComponent.vue';\nimport { citiesData } from '../citiesData.js';\n\nexport default {\n  components: {\n    HeaderComponent,\n    FooterComponent,\n  },\n  data() {\n    return {\n      city: null,\n      selectedMeasure: null,\n    };\n  },\n  methods: {\n    loadCity(cityName) {\n      this.city = citiesData.find(city => city.name === cityName);\n    },\n    showMeasureDetails(measureId) {\n      this.selectedMeasure = this.city.measures.find(measure => measure.id === measureId);\n    },\n  },\n};\n</script>"],"mappings":";;EAKSA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAc;;;EACjBA,KAAK,EAAC;;gCACZC,mBAAA,CAA+C;EAA5CD,KAAK,EAAC;AAAqB,GAAC,cAAY;gCAC3CC,mBAAA,CAAuE,cAAjE,4DAA0D;;EAC5DD,KAAK,EAAC;AAAa;;;EAGdA,KAAK,EAAC;AAAgB;;EACjBA,KAAK,EAAC;AAA2B;;;EAKtCA,KAAK,EAAC;AAAkB;;EACpBA,KAAK,EAAC;AAA0B;iCACrCC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAiB,YAAb,UAAQ,E;;;;;;6DA7BtCA,mBAAA,CAkDM,cAjDJC,YAAA,CAAqCC,2BAAA,GACrCD,YAAA,CAA2CE,wBAAA;IAA3BC,cAAa,EAAEC,QAAA,CAAAC;EAAQ,6CACvCC,mBAAA,aAAgB,EAChBP,mBAAA,CA6CM,OA7CNQ,UA6CM,GA5CJR,mBAAA,CA2CM,OA3CNS,UA2CM,GA1CJT,mBAAA,CAyCM,OAzCNU,UAyCM,GAxCJV,mBAAA,CAuCM,OAvCNW,UAuCM,GAtCJX,mBAAA,CAqCM,OArCNY,UAqCM,GApCJZ,mBAAA,CAmCM,OAnCNa,UAmCM,GAlC2BC,KAAA,CAAAC,IAAI,I,cAAnCC,mBAAA,CAA4F,QAA5FC,UAA4F,EAAAC,gBAAA,CAApDJ,KAAA,CAAAC,IAAI,CAACI,IAAI,IAAG,gBAAc,GAAAD,gBAAA,CAAGJ,KAAA,CAAAC,IAAI,CAACK,KAAK,IAAG,KAAG,mB,mCACrFC,UAA+C,EAC/CC,UAAuE,EACvEtB,mBAAA,CA8BK,MA9BLuB,WA8BK,I,kBA7BHP,mBAAA,CA4BKQ,SAAA,QAAAC,WAAA,CA5BiBX,KAAA,CAAAC,IAAI,CAACW,QAAQ,EAAxBC,OAAO;yBAAlBX,mBAAA,CA4BK;MA5BiCY,GAAG,EAAED,OAAO,CAACE;QACjD7B,mBAAA,CAMM;MANDD,KAAK,EAAC,oBAAoB;MAAE+B,OAAK,EAAAC,MAAA,IAAE1B,QAAA,CAAA2B,kBAAkB,CAACL,OAAO,CAACE,EAAE;QACnE7B,mBAAA,CAEI,KAFJiC,WAEI,GADFjC,mBAAA,CAAiE,QAAjEkC,WAAiE,EAAAhB,gBAAA,CAAtBS,OAAO,CAACQ,IAAI,iB,oBACrD,GACJ,GAAAjB,gBAAA,CAAGS,OAAO,CAACR,IAAI,IAAG,GAClB,iBAAAnB,mBAAA,CAAuE;MAAjED,KAAK,EAAC,eAAe;MAAE,oBAAkB,EAAE4B,OAAO,CAACP;wEAE3DpB,mBAAA,CAmBM,OAnBNoC,WAmBM,GAlBJpC,mBAAA,CAiBQ,SAjBRqC,WAiBQ,GAhBNC,WAOQ,EACRtC,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAqC,YAAAkB,gBAAA,CAA9BS,OAAO,CAACY,WAAW,qBAC1BvC,mBAAA,CAAsC,YAAAkB,gBAAA,CAA/BS,OAAO,CAACa,YAAY,qBAC3BxC,mBAAA,CAAsC,YAAAkB,gBAAA,CAA/BS,OAAO,CAACa,YAAY,qBAC3BxC,mBAAA,CAAsC,YAAAkB,gBAAA,CAA/BS,OAAO,CAACa,YAAY,oB;kDAcrDvC,YAAA,CAAqCwC,2BAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}