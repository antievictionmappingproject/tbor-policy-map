{"ast":null,"code":"/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\nimport VueMaterialize from 'vue-materialize';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from './components/MainComponent.vue';\nimport About from './components/AboutComponent.vue';\nimport HowTo from './components/HowToComponent.vue';\nimport CityPage from './components/CityPage.vue';\nimport CartoPage from './components/CartoPage.vue';\n\n// Define your routes\nconst routes = [{\n  path: '/',\n  component: Home\n}, {\n  path: '/about',\n  component: About\n}, {\n  path: '/howto',\n  component: HowTo\n}, {\n  path: '/city/:id',\n  name: 'city',\n  component: CityPage,\n  props: true\n}, {\n  path: '/carto/:id',\n  name: 'carto',\n  component: CartoPage,\n  props: true\n}\n// Other routes\n];\n\n// Create the router instance\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Initialize Materialize components before each route navigation\nrouter.beforeEach((to, from, next) => {\n  // Initialize Materialize components here\n  M.Sidenav.init(document.querySelector('.sidenav'));\n  M.Collapsible.init(document.querySelector('.collapsible'));\n  next();\n});\n\n// Create the app instance\nconst app = createApp(App);\n\n// Register a custom directive for Materialize\napp.directive('materialize', {\n  mounted(el, binding) {\n    M.AutoInit();\n    M.Collapsible.init(el);\n  }\n});\n\n// Use VueMaterialize plugin and Vue Router before mounting the app\napp.use(router).use(VueMaterialize).mount('#app');","map":{"version":3,"names":["createApp","App","VueMaterialize","createRouter","createWebHistory","Home","About","HowTo","CityPage","CartoPage","routes","path","component","name","props","router","history","process","env","BASE_URL","beforeEach","to","from","next","M","Sidenav","init","document","querySelector","Collapsible","app","directive","mounted","el","binding","AutoInit","use","mount"],"sources":["/Users/caminibu/Documents/AEMP/tbor/src/main.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\nimport VueMaterialize from 'vue-materialize';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from './components/MainComponent.vue';\nimport About from './components/AboutComponent.vue';\nimport HowTo from './components/HowToComponent.vue';\nimport CityPage from './components/CityPage.vue';\nimport CartoPage from './components/CartoPage.vue';\n\n// Define your routes\nconst routes = [\n  { path: '/', component: Home },\n  { path: '/about', component: About },\n  { path: '/howto', component: HowTo },\n  { path: '/city/:id', name: 'city', component: CityPage, props: true },\n  { path: '/carto/:id', name: 'carto', component: CartoPage, props: true },\n  // Other routes\n];\n\n// Create the router instance\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\n// Initialize Materialize components before each route navigation\nrouter.beforeEach((to, from, next) => {\n  // Initialize Materialize components here\n  M.Sidenav.init(document.querySelector('.sidenav'));\n  M.Collapsible.init(document.querySelector('.collapsible'));\n  next();\n});\n\n// Create the app instance\nconst app = createApp(App);\n\n// Register a custom directive for Materialize\napp.directive('materialize', {\n  mounted(el, binding) {\n    M.AutoInit();\n    M.Collapsible.init(el);\n  },\n});\n\n// Use VueMaterialize plugin and Vue Router before mounting the app\napp.use(router).use(VueMaterialize).mount('#app');\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,8CAA8C;AACrD,OAAO,4CAA4C;AACnD,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,SAAS,MAAM,4BAA4B;;AAElD;AACA,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEP;AAAK,CAAC,EAC9B;EAAEM,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEN;AAAM,CAAC,EACpC;EAAEK,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEL;AAAM,CAAC,EACpC;EAAEI,IAAI,EAAE,WAAW;EAAEE,IAAI,EAAE,MAAM;EAAED,SAAS,EAAEJ,QAAQ;EAAEM,KAAK,EAAE;AAAK,CAAC,EACrE;EAAEH,IAAI,EAAE,YAAY;EAAEE,IAAI,EAAE,OAAO;EAAED,SAAS,EAAEH,SAAS;EAAEK,KAAK,EAAE;AAAK;AACvE;AAAA,CACD;;AAED;AACA,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,gBAAgB,CAACa,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CT;AACF,CAAC,CAAC;;AAEF;AACAK,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACAC,CAAC,CAACC,OAAO,CAACC,IAAI,CAACC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CAAC;EAClDJ,CAAC,CAACK,WAAW,CAACH,IAAI,CAACC,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAC,CAAC;EAC1DL,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACA,MAAMO,GAAG,GAAG9B,SAAS,CAACC,GAAG,CAAC;;AAE1B;AACA6B,GAAG,CAACC,SAAS,CAAC,aAAa,EAAE;EAC3BC,OAAOA,CAACC,EAAE,EAAEC,OAAO,EAAE;IACnBV,CAAC,CAACW,QAAQ,CAAC,CAAC;IACZX,CAAC,CAACK,WAAW,CAACH,IAAI,CAACO,EAAE,CAAC;EACxB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACM,GAAG,CAACrB,MAAM,CAAC,CAACqB,GAAG,CAAClC,cAAc,CAAC,CAACmC,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}