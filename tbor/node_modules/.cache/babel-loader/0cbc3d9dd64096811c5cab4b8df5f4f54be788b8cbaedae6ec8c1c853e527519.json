{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"section\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col s12\"\n};\nconst _hoisted_5 = {\n  class: \"card\"\n};\nconst _hoisted_6 = {\n  class: \"card-content\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"card-title\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"tiny material-icons\"\n}, \"info_outline\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Click the panels below to see how the score was evaluated.\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"collapsible\"\n};\nconst _hoisted_11 = {\n  class: \"collapsible-header\"\n};\nconst _hoisted_12 = {\n  class: \"material-icons\"\n};\nconst _hoisted_13 = {\n  class: \"material-symbols-outlined\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"new badge red\",\n  \"data-badge-caption\": \"0\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_15 = {\n  class: \"collapsible-body\"\n};\nconst _hoisted_16 = {\n  class: \"striped responsive-table\"\n};\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Quality Measure\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Score: 1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Score: 0.5\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Score: 0\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_header_component = _resolveComponent(\"header-component\");\n  const _component_footer_component = _resolveComponent(\"footer-component\");\n  const _directive_collapsible = _resolveDirective(\"collapsible\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_header_component), _createCommentVNode(\" Content \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [$data.city ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString($data.city.name) + \" Index Score: \" + _toDisplayString($data.city.score) + \"/9 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_8, _hoisted_9, _createCommentVNode(\" Check if city is not null before accessing measures \"), _withDirectives((_openBlock(), _createElementBlock(\"ul\", _hoisted_10, [$data.city && $data.city.measures ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.city.measures, measure => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: measure.id\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"i\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, _toDisplayString($options.getIconForMeasure(measure.title)), 1 /* TEXT */)]), _createTextVNode(\" \" + _toDisplayString(measure.title) + \" \", 1 /* TEXT */), _hoisted_14]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"table\", _hoisted_16, [_hoisted_17, _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(measure.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getScoreDescription(1, measure.title)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getScoreDescription(0.5, measure.title)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getScoreDescription(0, measure.title)), 1 /* TEXT */)])])])])]);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])), [[_directive_collapsible]])])])])])])])]), _createVNode(_component_footer_component)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","_component_header_component","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","$data","city","_createElementBlock","_hoisted_7","_toDisplayString","name","score","_hoisted_8","_hoisted_9","_hoisted_10","measures","_Fragment","key","_renderList","measure","id","_hoisted_11","_hoisted_12","_hoisted_13","$options","getIconForMeasure","title","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","getScoreDescription","_component_footer_component"],"sources":["/Users/caminibu/Documents/AEMP/tbor/src/components/CityPage.vue"],"sourcesContent":["<!-- CityPage.vue -->\n<template>\n  <div>\n    <header-component></header-component>\n    <!-- Content -->\n    <div class=\"container\">\n      <div class=\"section\">\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"card\">\n              <div class=\"card-content\">\n                <span class=\"card-title\" v-if=\"city\">\n                  {{ city.name }} Index Score: {{ city.score }}/9\n                </span>\n                <i class=\"tiny material-icons\">info_outline</i>\n                <span>Click the panels below to see how the score was evaluated.</span>\n\n                <!-- Check if city is not null before accessing measures -->\n                <ul class=\"collapsible\" v-collapsible>\n                <li v-if=\"city && city.measures\" v-for=\"measure in city.measures\" :key=\"measure.id\">\n                  <div class=\"collapsible-header\">\n                    <i class=\"material-icons\"><span class=\"material-symbols-outlined\">{{ getIconForMeasure(measure.title) }}</span></i>\n                    {{ measure.title }}\n                    <span class=\"new badge red\" data-badge-caption=\"0\"></span>\n                  </div>\n                  <div class=\"collapsible-body\">\n                    <table class=\"striped responsive-table\">\n                      <thead>\n                        <tr>\n                          <th>Quality Measure</th>\n                          <th>Score: 1</th>\n                          <th>Score: 0.5</th>\n                          <th>Score: 0</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>{{ measure.title }}</td>\n                          <td>{{ getScoreDescription(1, measure.title) }}</td>\n                          <td>{{ getScoreDescription(0.5, measure.title) }}</td>\n                          <td>{{ getScoreDescription(0, measure.title) }}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </li>\n              </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <footer-component></footer-component>\n</template>\n\n<script>\n// CityPage.vue\nimport HeaderComponent from './HeaderComponent.vue';\nimport FooterComponent from './FooterComponent.vue';\nimport { citiesData } from '../citiesData.js';\n\nexport default {\n  components: {\n    HeaderComponent,\n    FooterComponent,\n  },\n  data() {\n    return {\n      city: null,\n      citiesData: citiesData,\n    };\n  },\n  mounted() {\n    this.loadCityData();\n    this.$nextTick(() => {\n      const collapsibleElement = document.querySelector('.collapsible');\n      if (collapsibleElement) {\n        // eslint-disable-next-line no-undef\n        M.Collapsible.init(collapsibleElement);\n      }\n    });\n  },\n  methods: {\n    loadCityData() {\n      const cityId = this.$route.params.id;\n      // Find the city with the matching ID in citiesData\n      this.city = citiesData.find((city) => city.id === parseInt(cityId));\n    },\n    getIconForMeasure(title) {\n    // Define mapping of measure titles to icons\n    const iconMap = {\n      'Rent Stabilization': 'apartment',\n      'Anti-Harassment Protections': 'security',\n      'Limits on Evictions Based on Non-Payment of Rent': 'house_with_shield',\n      'Relocation Assistance for Large Rent Increases': 'move_location',\n      'Tenant Buyout Safeguards': 'real_estate_agent',\n      'Proactive Code Enforcement': 'shield_lock',\n      'Fair Access and/or Anti-Discrimination Policies': 'policy',\n      'Codified Right to Counsel': 'gavel',\n      'Universal Just Cause Protections': 'vpn_lock'\n    };\n\n    return iconMap[title] || ''; // Return the corresponding icon or an empty string if not found\n    },\n    getScoreDescription(score, measureTitle) {\n      // Add logic to get the score descriptions based on measure title and score\n      // You can customize this based on your specific requirements\n      return 'Description for Score ' + score + ' in ' + measureTitle;\n    },\n  },\n};\n</script>\n"],"mappings":";;EAKSA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAc;;;EACjBA,KAAK,EAAC;;gCAGZC,mBAAA,CAA+C;EAA5CD,KAAK,EAAC;AAAqB,GAAC,cAAY;gCAC3CC,mBAAA,CAAuE,cAAjE,4DAA0D;;EAG5DD,KAAK,EAAC;AAAa;;EAEhBA,KAAK,EAAC;AAAoB;;EAC1BA,KAAK,EAAC;AAAgB;;EAAOA,KAAK,EAAC;AAA2B;iCAEjEC,mBAAA,CAA0D;EAApDD,KAAK,EAAC,eAAe;EAAC,oBAAkB,EAAC;;;EAE5CA,KAAK,EAAC;AAAkB;;EACpBA,KAAK,EAAC;AAA0B;iCACrCC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAiB,YAAb,UAAQ,E;;;;;;6DA9BpCA,mBAAA,CAmDM,cAlDJC,YAAA,CAAqCC,2BAAA,GACrCC,mBAAA,aAAgB,EAChBH,mBAAA,CA+CM,OA/CNI,UA+CM,GA9CJJ,mBAAA,CA6CM,OA7CNK,UA6CM,GA5CJL,mBAAA,CA2CM,OA3CNM,UA2CM,GA1CJN,mBAAA,CAyCM,OAzCNO,UAyCM,GAxCJP,mBAAA,CAuCM,OAvCNQ,UAuCM,GAtCJR,mBAAA,CAqCM,OArCNS,UAqCM,GApC2BC,KAAA,CAAAC,IAAI,I,cAAnCC,mBAAA,CAEO,QAFPC,UAEO,EAAAC,gBAAA,CADFJ,KAAA,CAAAC,IAAI,CAACI,IAAI,IAAG,gBAAc,GAAAD,gBAAA,CAAGJ,KAAA,CAAAC,IAAI,CAACK,KAAK,IAAG,KAC/C,mB,mCACAC,UAA+C,EAC/CC,UAAuE,EAEvEf,mBAAA,yDAA4D,E,+BAC5DS,mBAAA,CA4BG,MA5BHO,WA4BG,GA3BOT,KAAA,CAAAC,IAAI,IAAID,KAAA,CAAAC,IAAI,CAACS,QAAQ,I,kBAA/BR,mBAAA,CA0BKS,SAAA;IAAAC,GAAA;EAAA,GAAAC,WAAA,CA1B8Cb,KAAA,CAAAC,IAAI,CAACS,QAAQ,EAAxBI,OAAO;yBAA/CZ,mBAAA,CA0BK;MA1B8DU,GAAG,EAAEE,OAAO,CAACC;QAC9EzB,mBAAA,CAIM,OAJN0B,WAIM,GAHJ1B,mBAAA,CAAmH,KAAnH2B,WAAmH,GAAzF3B,mBAAA,CAAqF,QAArF4B,WAAqF,EAAAd,gBAAA,CAA1Ce,QAAA,CAAAC,iBAAiB,CAACN,OAAO,CAACO,KAAK,kB,oBAAe,GACnH,GAAAjB,gBAAA,CAAGU,OAAO,CAACO,KAAK,IAAG,GACnB,iBAAAC,WAA0D,C,GAE5DhC,mBAAA,CAmBM,OAnBNiC,WAmBM,GAlBJjC,mBAAA,CAiBQ,SAjBRkC,WAiBQ,GAhBNC,WAOQ,EACRnC,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAA4B,YAAAc,gBAAA,CAArBU,OAAO,CAACO,KAAK,kBACpB/B,mBAAA,CAAoD,YAAAc,gBAAA,CAA7Ce,QAAA,CAAAO,mBAAmB,IAAIZ,OAAO,CAACO,KAAK,mBAC3C/B,mBAAA,CAAsD,YAAAc,gBAAA,CAA/Ce,QAAA,CAAAO,mBAAmB,MAAMZ,OAAO,CAACO,KAAK,mBAC7C/B,mBAAA,CAAoD,YAAAc,gBAAA,CAA7Ce,QAAA,CAAAO,mBAAmB,IAAIZ,OAAO,CAACO,KAAK,kB;oHAcnE9B,YAAA,CAAqCoC,2BAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}